name: Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write   # to create releases and upload assets

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [ linux ]
        goarch: [ amd64, arm64 ]
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Build
        run: |
          mkdir -p dist
          binary_name="go-thingy-${GOOS}-${GOARCH}"
          go build -o "dist/${binary_name}" ./...
          ls -l dist

      - name: Generate checksum
        run: |
          cd dist
          for f in *; do sha256sum "$f" > "$f.sha256"; done

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goarch }}
          path: dist/*
          if-no-files-found: error

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          merge-multiple: true
          path: dist

      - name: Calculate combined checksums file
        run: |
          cd dist
          sha256sum * | sort -k2 > CHECKSUMS.txt

      - name: Create tag (if missing)
        id: create_tag
        run: |
          TAG="v${GITHUB_RUN_NUMBER}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            git tag "$TAG" "$GITHUB_SHA"
            git push origin "$TAG"
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          name: Release ${{ steps.create_tag.outputs.tag }}
          generate_release_notes: true
          files: |
            dist/go-thingy-*
            dist/*.sha256
            dist/CHECKSUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
